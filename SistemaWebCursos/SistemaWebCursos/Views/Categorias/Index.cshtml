@model Paginacion<SistemaWebCursos.Models.Categoria> 

@{
    ViewData["Title"] = "Index";
}

<h1>Categorias de los cursos</h1>

<form asp-action="Index" method="get"  class="form-inline">
    <div class="form-action no-color">
        <div class="form-group mb-2">
            <label class="form-control-plaintext  mb-2">Filtro: </label>
            <input type="text" name="searchString" class="form-control  mb-2" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Buscar" class="btn btn-outline-success mb-2" />
            <a asp-action="Index" class="btn btn-outline-primary mb-2">Todos los registros</a>
            <a asp-action="Create" class="btn btn-outline-secondary mb-2">Nuevo registro</a>
           
        </div>
    </div>
</form>

<table class="table">
    <thead class="toast-header">
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrden="@ViewData["NombreSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Nombre<!--aHtml.DisplayNameFor(model => model.Nombre)-->
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrden="@ViewData["DescripcionSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Descripcion<!--aHtml.DisplayNameFor(model => model.Descripcion)-->
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrden="@ViewData["EstadoSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Estado<!-- aHtml.DisplayNameFor(model => model.Estado)-->
                </a>
                
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Descripcion)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Estado)
                </td>
                <td>
                    <div class="btn-group" role="group">
                        <a asp-action="Edit" class="btn btn-primary" asp-route-id="@item.CategoriaID"> Editar </a> 
                        <a asp-action="Details" class="btn btn-secondary" asp-route-id="@item.CategoriaID">  Detalles</a> 
                        <a asp-action="Delete" class="btn btn-danger" asp-route-id="@item.CategoriaID">Eliminar</a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
 }
<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item">
            <a asp-action="Index"
               asp-route-sortOrden="@ViewData["CurrentSort"]"
               asp-route-page="@(Model.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link @prevDisabled">
                Anterior
            </a>
        </li>

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            string clas = int.Equals(Model.PageIndex, i) ? "page-link" : "page-link active";
            <li class="page-item">
                <a asp-action="Index"
                   asp-route-sortOrden="@ViewData["CurrentSort"]"
                   asp-route-page="@i"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="@clas">
                    @i @if (i == Model.PageIndex)
                    {
                        <span class="sr-only">(current)</span>
                    }
                </a>
            </li>
        }
        <li class="page-item">
            <a asp-action="Index"
               asp-route-sortOrden="@ViewData["CurrentSort"]"
               asp-route-page="@(Model.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link @nextDisabled">
                Siguiente
            </a>
        </li>
    </ul>
</nav>